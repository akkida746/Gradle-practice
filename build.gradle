plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id "me.champeau.jmh" version "0.7.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// These are manual task created that will be executed at first during 'gradle clean build'
task testPrint1{
	println "Test print 1 executed!"
}
tasks.create('testPrint2'){
	println "Test print 2 executed!"
}

//tasks.register("prepareChangelog") {
//	dependsOn("patchChangelog")
//	doLast {
//		exec {
//			commandLine("git", "commit", "--amend", "-a", "--no-edit")
//		}
//		exec {
//			commandLine("git", "tag", "$version", "-f", "HEAD")
//		}
//	}
//}

/*References: https://lowcarbrob.medium.com/android-pro-tip-generating-your-apps-changelog-from-git-inside-build-gradle-19a07533eec4*/
tasks.create("Generating Changelog"){
	def gitLogCmd = "git log --oneline --no-merges --pretty=format:\"%s\"".execute().text.trim()
	gitLogCmd.eachLine { line -> println(line)}
}

