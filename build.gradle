plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id "me.champeau.jmh" version "0.7.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// These are manual task created that will be executed at first during 'gradle clean build'
task testPrint1{
	println "Test print 1 executed!"
}
tasks.create('testPrint2'){
	println "Test print 2 executed!"
}

//tasks.register("prepareChangelog") {
//	dependsOn("patchChangelog")
//	doLast {
//		exec {
//			commandLine("git", "commit", "--amend", "-a", "--no-edit")
//		}
//		exec {
//			commandLine("git", "tag", "$version", "-f", "HEAD")
//		}
//	}
//}

tasks.create("Generating Changelog"){
	println "Generating changelog.."
//Get the last tag
	def lastTag = "git describe --tags --abbrev=0".execute().text.trim()
//Get all the commits since the last tag
	def gitLogCmd = "git log --oneline --no-merges --pretty=format:\"%s\"".execute().text.trim()
//Loop each line of the commits to build your changelog
	def changelog = "\""
	gitLogCmd.eachLine { line ->
//Remove surrounding quotation marks generated by the git log comand
		def escapedLine = line.substring(1, line.length() - 1)
//Escape backslashes
		escapedLine = escapedLine.replaceAll(/(\\)/, "\\/")
//Escape quotation marks
		escapedLine = escapedLine.replaceAll('"', '\\\\"')
//Add each item to the changelog as a bullet point
		changelog += "â€¢ $escapedLine \\n"

	}
//Close the changelog string
	changelog = (changelog + "\"").trim()
//Useful log so you can see what was generated in the Gradle output
	println "Changelog generated, $changelog, from $lastTag to now."
}



